<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.spring.projectjs.jdbc.ITransaction">

    <insert id="transaction_write" parameterType="org.spring.projectjs.jdbc.TransactionDTO">
        insert into transaction (transaction_idx, transaction_price, transaction_title, transaction_content, writer,
        ofile1, sfile1, ofile2, sfile2, ofile3, sfile3 )
        values(SEQ_BOARD_NUM.nextval, #{transaction_price}, #{transaction_title}, #{transaction_content}, #{writer},
        #{ofile1, jdbcType=VARCHAR},
        #{sfile1, jdbcType=VARCHAR},
        #{ofile2, jdbcType=VARCHAR},
        #{sfile2, jdbcType=VARCHAR},
        #{ofile3, jdbcType=VARCHAR},
        #{sfile3, jdbcType=VARCHAR} )
    </insert>

    <!-- searchField searchKeyword -->
    <select id="transaction_totalCount" parameterType="org.spring.projectjs.jdbc.ParameterDTO"
            resultType="int">

        select count(*) from transaction
        <if test="searchKeyword != null and !searchKeyword.equals('')">
            where ${searchField} like '%'||#{searchKeyword}||'%'
        </if>

    </select>


    <select id="transaction_listPage" parameterType="org.spring.projectjs.jdbc.ParameterDTO"
            resultType="org.spring.projectjs.jdbc.TransactionDTO">
        select * from (
        select Tb.*, rownum rNum from (
        select * from transaction
        <if test="searchKeyword != null and
 		!searchKeyword.equals('')">
            where ${searchField} like '%'||#{searchKeyword}||'%'

        </if>
        order by transaction_idx desc
        ) Tb
        )
        where rNum<![CDATA[>=]]>#{start}
        and rNum<![CDATA[<=]]>#{end}
        <!--  where rNum between #{start} and #{end} -->
    </select>

    <!-- 상세보기 -->
    <select id="transaction_view" parameterType="org.spring.projectjs.jdbc.TransactionDTO"
            resultType="org.spring.projectjs.jdbc.TransactionDTO">
        select * from transaction where transaction_idx=#{transaction_idx}
    </select>

    <!-- 파일 하나 삭제 -->
    <update id="transaction_deleteFileOne">
        update transaction
        <set>
            <choose>
                <when test="param2 == 1">
                    ofile1 = '', sfile1 = ''
                </when>
                <when test="param2 == 2">
                    ofile2 = '', sfile2 = ''
                </when>
                <when test="param2 == 3">
                    ofile3 = '', sfile3 = ''
                </when>
            </choose>
        </set>
        where transaction_idx = #{param1}
    </update>

    <!-- 파일만 업데이트 -->
    <update id="transaction_updateFile" parameterType="org.spring.projectjs.jdbc.TransactionDTO">
        UPDATE transaction set

        <if test="num == 1">
            ofile1 = #{ofile1},
            sfile1 = #{sfile1}
        </if>
        <if test="num == 2">
            ofile2 = #{ofile2},
            sfile2 = #{sfile2}
        </if>
        <if test="num == 3">
            ofile3 = #{ofile3},
            sfile3 = #{sfile3}
        </if>

        WHERE transaction_idx = #{transaction_idx}
    </update>

    <!--
    String transaction_price, String transaction_title,
    String transaction_content, String transaction_idx
    -->
    <!-- 타이틀 컨텐츠 프라이스 만 등록하기 -->
    <update id="updateTitleContentPrice">
        update transaction set transaction_price=#{param1}, transaction_title=#{param2},
        transaction_content=#{param3} where transaction_idx=#{param4}
    </update>

    <!-- 파일전체 삭제 -->
    <update id="transaction_DeleteFileAll">
        update transaction set ofile1 = '', sfile1 = '', ofile2 = '', sfile2 = '',
        ofile3 = '', sfile3 = '' where transaction_idx=#{param1}
    </update>

    <!-- 게시물 삭제 -->
    <delete id="transaction_delete">
        delete from transaction where transaction_idx=#{param1}
    </delete>

    <!-- 판매여부 -->
    <update id="transaction_purchase">
        update transaction set transaction_istrans = 'y' where transaction_idx=#{param1}
    </update>

</mapper>


